&НаКлиенте
Перем РазрешитьЗакрытие;
&НаКлиенте
Перем ОжиданиеЗавершено;
&НаКлиенте
Перем ФиксацияЗавершена;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Длительность = Параметры.Длительность;
	
	ХранилищеРезультатаОбработкиЗапросов = Параметры.АдресХранилища;
	РезультатОбработкиЗапросов = ПолучитьИзВременногоХранилища(ХранилищеРезультатаОбработкиЗапросов);
	
	НачатьФиксациюПримененияЗапросов(РезультатОбработкиЗапросов.ИдентификаторыЗапросов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазрешитьЗакрытие = Ложь;
	
	Если Длительность > 0 Тогда
		ОжиданиеЗавершено = Ложь;
		ПодключитьОбработчикОжидания("ПослеОжиданияПримененияНастроекВКластере", Длительность, Истина);
	Иначе
		ОжиданиеЗавершено = Истина;
	КонецЕсли;
	
	ФиксацияЗавершена = Ложь;
	ИтерацияПроверки = 1;
	ПодключитьОбработчикОжиданияОбработкиЗапросов(3);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не РазрешитьЗакрытие Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НачатьФиксациюПримененияЗапросов(Знач ИдентификаторыЗапросов)
	
	ПараметрыЗадания = Новый Массив();
	ПараметрыЗадания.Добавить(ИдентификаторыЗапросов);
	
	Задание = ФоновыеЗадания.Выполнить("РаботаВБезопасномРежимеСлужебный.ПрименитьЗапросы", ПараметрыЗадания);
	ИдентификаторЗадания = Задание.УникальныйИдентификатор;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФиксациюПримененияЗапросов()
	
	Попытка
		Готовность = ФиксацияПримененияЗапросовЗавершена(ИдентификаторЗадания);
	Исключение
		Закрыть(КодВозвратаДиалога.Отмена);
		ВызватьИсключение;
	КонецПопытки;
	
	Если Готовность Тогда
		ЗавершитьФиксациюПримененияЗапросов();
	Иначе
		
		ИтерацияПроверки = ИтерацияПроверки + 1;
		
		Если ИтерацияПроверки = 2 Тогда
			ПодключитьОбработчикОжиданияОбработкиЗапросов(5);
		ИначеЕсли ИтерацияПроверки = 3 Тогда
			ПодключитьОбработчикОжиданияОбработкиЗапросов(8);
		Иначе
			ПодключитьОбработчикОжиданияОбработкиЗапросов(10);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФиксацияПримененияЗапросовЗавершена(Знач ИдентификаторЗадания)
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	
	Если Задание <> Неопределено
		И Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	Если Задание = Неопределено Тогда
		ВызватьИсключение(НСтр("ru = 'При обработке запросов произошла ошибка - не найдено задание обработки запросов.'"));
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		ОшибкаЗадания = Задание.ИнформацияОбОшибке;
		Если ОшибкаЗадания <> Неопределено Тогда
			ВызватьИсключение(ПодробноеПредставлениеОшибки(ОшибкаЗадания));
		Иначе
			ВызватьИсключение(НСтр("ru = 'При обработке запросов произошла ошибка - задание обработки запросов завершилось с неизвестной ошибкой.'"));
		КонецЕсли;
	ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
		ВызватьИсключение(НСтр("ru = 'При обработке запросов произошла ошибка - задание обработки запросов было отменено администратором.'"));
	Иначе
		ИдентификаторЗадания = Неопределено;
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьФиксациюПримененияЗапросов()
	
	ФиксацияЗавершена = Истина;
	ЗакрытьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОбработчикОжиданияОбработкиЗапросов(Знач Интервал)
	
	ПодключитьОбработчикОжидания("ПроверитьФиксациюПримененияЗапросов", Интервал, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОжиданияПримененияНастроекВКластере()
	
	ОжиданиеЗавершено = Истина;
	ЗакрытьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()
	
	Если ФиксацияЗавершена И ОжиданиеЗавершено Тогда
		
		РазрешитьЗакрытие = Истина;
		Закрыть(КодВозвратаДиалога.ОК);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти