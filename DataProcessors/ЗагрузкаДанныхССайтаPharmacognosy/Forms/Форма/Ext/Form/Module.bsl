
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Страница = "http://pharmacognosy.com.ua/index.php/vashe-zdorovoye-pitanije/gryby"; 
	
КонецПроцедуры   

&НаКлиенте
Процедура Далее(Команда)
	
	ТекущаяСтрока = Элементы.СписокАдресов.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		КоличествоСтрок = Объект.СписокАдресов.Количество();
		Если КоличествоСтрок > (ТекущаяСтрока + 1) Тогда
			Если ЗначениеЗаполнено(Объект.СписокАдресов[ТекущаяСтрока + 1].АдресURL) Тогда
				Элементы.СписокАдресов.ТекущаяСтрока = ТекущаяСтрока + 1;	
				Страница = Объект.СписокАдресов[ТекущаяСтрока + 1].АдресURL;
			КонецЕсли; 	
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	ЗагрузитьДанныеНаСервере();
	
КонецПроцедуры  

&НаКлиенте
Процедура ПолучитьДанные(Команда)
	
	ТекущаяСтрока = Элементы.СписокАдресов.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПолучитьДанныеСоСтраницы(ТекущаяСтрока);	
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПолучитьСсылки(Команда)
	
	Объект.СписокАдресов.Очистить();	
	
	ЭлеметыBody = Элементы.Страница.Документ.body.all;
	
	Для Каждого ЭлементBody из ЭлеметыBody Цикл
		
		Если ВРег(ЭлементBody.tagName) = "DIV" И ЭлементBody.className = "item-page"  Тогда
			
			ЭлементыItemPage = ЭлементBody.all;
			Для Каждого ЭлементItemPage из ЭлементыItemPage Цикл 			
				
				Если ВРег(ЭлементItemPage.tagName) = "DIV" И ЭлементItemPage.Id = "modcont__ctl3_ThreePanes_ThreePanes__ctl3" Тогда 					
					
					ЭлементыId = ЭлементItemPage.all;	
					Для Каждого ЭлементId из ЭлементыId Цикл 
				
				        //Если ВРег(ЭлементItemPage.tagName) = "A"  Тогда //только для масел  					
				
						Если ВРег(ЭлементId.tagName) = "A" Тогда
							
							НоваяСтрока 			= Объект.СписокАдресов.Добавить();
							//НоваяСтрока.АдресURL	= ЭлементItemPage.href;//только для масел
							НоваяСтрока.АдресURL	= ЭлементId.href;					
							
						КонецЕсли;	
					
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеСоСтраницы(ДанныеПродукта)
	
	СчетчикTD = 1;
	СчетчикDIVвТаблице = 1; 	
	ДанныеПолучены = Ложь;    	
	
	ЭлеметыBody = Элементы.Страница.Документ.body.all;
	
	Для Каждого ЭлементBody из ЭлеметыBody Цикл
		
		Если ВРег(ЭлементBody.tagName) = "DIV" И ЭлементBody.className = "item-page"  Тогда
			
			ЭлементыItemPage = ЭлементBody.all;
			Для Каждого ЭлементItemPage из ЭлементыItemPage Цикл  				
				
				Если ВРег(ЭлементItemPage.tagName) = "TABLE" Тогда
					
					ЭлементыTable = ЭлементItemPage.all;
					Для Каждого ЭлементTable из ЭлементыTable Цикл  				
						
						Если ВРег(ЭлементTable.tagName) = "TBODY" Тогда
							
							ЭлементыTBODY = ЭлементTable.all;
							Для Каждого ЭлементTBODY из ЭлементыTBODY Цикл  															
								
								Если ВРег(ЭлементTBODY.tagName) = "TR" Тогда
									
									ЭлементыTR = ЭлементTBODY.all;
									Для Каждого ЭлементTR из ЭлементыTR Цикл  				
										
										Если ВРег(ЭлементTR.tagName) = "TD" Тогда 																	
											
											Если СчетчикTD = 2 Тогда
												
												ЭлементыDIVвТаблице = ЭлементTR.all;
												Для Каждого ЭлементDIVвТаблице из ЭлементыDIVвТаблице Цикл  				
													
													Если ВРег(ЭлементDIVвТаблице.tagName) = "DIV" Тогда 														
														
														Если СчетчикDIVвТаблице = 1 Тогда
															ДанныеПродукта.Наименование = ЭлементDIVвТаблице.firstChild.innerText;
														Иначе
															
															ТекстDIV = ЭлементDIVвТаблице.innerText;
															ПозицияХС = Найти(ТекстDIV, "ХИМИЧЕСКИЙ СОСТАВ");
															ПозицияВН = Найти(ТекстDIV, "ВИТАМИНЫ"); 														
															ПозицияМЭ = Найти(ТекстDIV, "МИНЕРАЛЬНЫЕ ЭЛЕМЕНТЫ");
															ПозицияБА = Найти(ТекстDIV, "БЕЛКИ И АМИНОКИСЛОТЫ");
															ПозицияЖК = Найти(ТекстDIV, "ЖИРЫ И ЖИРНЫЕ КИСЛОТЫ");
															ПозицияУД = Найти(ТекстDIV, "УГЛЕВОДЫ");
															
															Если ПозицияХС > 0 И НЕ ДанныеПолучены Тогда
																
																ЗаголовокТаблицы = СокрЛП(Лев(ТекстDIV, ПозицияХС - 1));
																МассивПоказателей = ПолучитьВсеЧислаВСтроке(ЗаголовокТаблицы);
																ДанныеПродукта.Калорийность = МассивПоказателей[1];
																ДанныеПродукта.Вода = МассивПоказателей[3];
																ДанныеПродукта.Зола = МассивПоказателей[5];
																
																ДанныеПолучены = Истина;
																
															КонецЕсли; 	
															
															Если (ПозицияВН + ПозицияМЭ + ПозицияБА + ПозицияЖК + ПозицияУД) > 0 Тогда
																ПарсингТаблицНутриентов(ЭлементDIVвТаблице, ДанныеПродукта.Наименование); 																
															КонецЕсли; 
															
														КонецЕсли; 
														
														СчетчикDIVвТаблице = СчетчикDIVвТаблице + 1;
														
													КонецЕсли; 						
													
												КонецЦикла;
												
												Прервать;
												
											КонецЕсли; 
											
											СчетчикTD = СчетчикTD + 1;
											
										КонецЕсли; 						
										
									КонецЦикла; 
									
									Прервать;
									
								КонецЕсли; 						
								
							КонецЦикла; 
							
							Прервать; 
							
						КонецЕсли; 						
						
					КонецЦикла; 
					
					Прервать;  
					
				КонецЕсли; 						
				
			КонецЦикла; 
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;  	
		
КонецПроцедуры

&НаКлиенте
Процедура ПарсингТаблицНутриентов(Блок, Наименование)  
	
	ТипНутриента = ПредопределенноеЗначение("Перечисление.ТипыНутриентов.ПустаяСсылка");
	
	ЭлементыБлока = Блок.all;
	Для Каждого ЭлементБлока из ЭлементыБлока Цикл    		
		
		Если ВРег(ЭлементБлока.tagName) = "DIV" Тогда 														
			
			ТекстDIV = ЭлементБлока.innerText;
			
			ПозицияВН = Найти(ТекстDIV, "ВИТАМИНЫ"); 														
			ПозицияМЭ = Найти(ТекстDIV, "МИНЕРАЛЬНЫЕ ЭЛЕМЕНТЫ");
			ПозицияБА = Найти(ТекстDIV, "БЕЛКИ И АМИНОКИСЛОТЫ");
			ПозицияЖК = Найти(ТекстDIV, "ЖИРЫ И ЖИРНЫЕ КИСЛОТЫ");
			ПозицияУД = Найти(ТекстDIV, "УГЛЕВОДЫ");
			
			Если ПозицияВН > 0 Тогда
				ТипНутриента = ПредопределенноеЗначение("Перечисление.ТипыНутриентов.Витамины");
			ИначеЕсли ПозицияМЭ > 0 Тогда
				ТипНутриента = ПредопределенноеЗначение("Перечисление.ТипыНутриентов.Минералы");
			ИначеЕсли ПозицияБА > 0 Тогда
				ТипНутриента = ПредопределенноеЗначение("Перечисление.ТипыНутриентов.Аминокислоты");
			ИначеЕсли ПозицияЖК > 0 Тогда
				ТипНутриента = ПредопределенноеЗначение("Перечисление.ТипыНутриентов.Жиры");
			ИначеЕсли ПозицияУД > 0 Тогда
				ТипНутриента = ПредопределенноеЗначение("Перечисление.ТипыНутриентов.Углеводы");
			КонецЕсли;	
				
		ИначеЕсли ВРег(ЭлементБлока.tagName) = "TABLE" Тогда
			
			ЭлементыTable = ЭлементБлока.all;
			Для Каждого ЭлементTable из ЭлементыTable Цикл  				
				
				Если ВРег(ЭлементTable.tagName) = "TBODY" Тогда
					
					ЭлементыTBODY = ЭлементTable.all;
					Для Каждого ЭлементTBODY из ЭлементыTBODY Цикл  				
						
						Если ВРег(ЭлементTBODY.tagName) = "TR" И ЭлементTBODY.children.length = 4 Тогда
							
							Счетчик 		= 0; 							 	
							Нутриент 		= "";
							Количество 		= 0; 							
							
							ЭлементыTR = ЭлементTBODY.all;
							Для Каждого ЭлементTR из ЭлементыTR Цикл  				
								
								Если ВРег(ЭлементTR.tagName) = "TD" И Счетчик < 2 Тогда
									
									Если Счетчик = 0 Тогда 										
										Нутриент = ЭлементTR.innerText;
									ИначеЕсли Счетчик = 1 Тогда
										Количество = ЭлементTR.innerText;									
									КонецЕсли; 
									
									Счетчик = Счетчик + 1;
									
								КонецЕсли;
								
							КонецЦикла;
							
							ДобавитьСтрокуВТаблицуХимСостава(Наименование, Нутриент, Количество, ТипНутриента); 
							
						КонецЕсли;
							
					КонецЦикла;	
					
					Прервать;
					
				КонецЕсли; 			
				
			КонецЦикла;	
			 			
		КонецЕсли; 		
				
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВсеЧислаВСтроке(СтрокаСЧислами)
	
	Результат = Новый Массив; 
	
	ДлинаСтроки 	= СтрДлина(СтрокаСЧислами);
	НомерТекСимвола = 1;
	
	Пока НомерТекСимвола < ДлинаСтроки Цикл 
	
		СтрокаЧисла 		= "";
		ЧислоДобавлено 		= Ложь;
		РазделительУчтен 	= Ложь;
		
		ПозЧисла = Позиция1гоЧислаВСтроке(СтрокаСЧислами, НомерТекСимвола);
		Если ПозЧисла > 0 Тогда  		
			
			Для Сч = ПозЧисла По ДлинаСтроки Цикл
				
				НомерТекСимвола = Сч;
				Код 			= КодСимвола(СтрокаСЧислами, Сч);
				
				Если Код >= 48 И Код <= 57 Тогда
					СтрокаЧисла = СтрокаЧисла + Символ(Код);
				ИначеЕсли (Код = 44 ИЛИ Код = 46) И НЕ РазделительУчтен Тогда 
					РазделительУчтен = Истина;
					СтрокаЧисла = СтрокаЧисла + Символ(Код);
				Иначе  				
					Прервать;
				КонецЕсли; 	
			КонецЦикла; 							
			 
			Если ЗначениеЗаполнено(СтрокаЧисла) Тогда
				Результат.Добавить(Число(СтрокаЧисла));		
			КонецЕсли;  		
						
		Иначе	
			Прервать;	
		КонецЕсли;  		
	
	КонецЦикла;
	
	Возврат Результат;
		
КонецФункции  

&НаКлиенте
Функция Позиция1гоЧислаВСтроке(пСтрока, НомерСимвола = 1, ОтНачала = Истина)
    	 
    КонечныйИндекс = СтрДлина(пСтрока);
	
	Для Ит = НомерСимвола По КонечныйИндекс Цикл 
		Если ОтНачала Тогда
			Код = КодСимвола(пСтрока, Ит);
		Иначе	
		    Код = КодСимвола(пСтрока, КонечныйИндекс - Ит + 1);
		КонецЕсли; 
		 		
		Если Код >= 48 И Код <= 57 Тогда  		
			Возврат Ит; 			
		КонецЕсли;
	КонецЦикла;
	
	Возврат 0;
		
КонецФункции
 
&НаКлиенте
Процедура ДобавитьСтрокуВТаблицуХимСостава(Наименование, Нутриент, Количество, ТипНутриента)
	
	Если НЕ ЗначениеЗаполнено(Нутриент) ИЛИ НЕ ЗначениеЗаполнено(Наименование)  Тогда
		Возврат;	
	КонецЕсли; 
	
	НоваяСтрока 				= Объект.ХимСостав.Добавить();
	НоваяСтрока.Наименование 	= Наименование;
	НоваяСтрока.Нутриент 		= Нутриент;
	НоваяСтрока.Количество 		= Количество;
	НоваяСтрока.ТипНутриента 	= ТипНутриента;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеНаСервере()
	
	Для каждого СтрокаСписка Из Объект.СписокАдресов Цикл
		Если ЗначениеЗаполнено(СтрокаСписка.Наименование) Тогда
			
			КоличествоПростыхУглеводов = 0;
			КоличествоСложныхУглеводов = 0;
			
			Продукт = ПолучитьПродуктПоНаименованию(ТРег(СтрокаСписка.Наименование), СтрокаСписка.Калорийность, Объект.Родитель, Справочники.ИсточникиИнформации.КМУ_УАНМ);
			
			МассивСтрокНутриентов = Объект.ХимСостав.НайтиСтроки(Новый Структура("Наименование", СтрокаСписка.Наименование));  	
			
			НаборЗаписей = РегистрыСведений.ХимическийСоставПродуктов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Продукт.Установить(Продукт);
			
			Для каждого СтрокаНутриентов Из МассивСтрокНутриентов Цикл  			
				
				Если ЗначениеЗаполнено(СтрокаНутриентов.Нутриент) Тогда  					 
					
					Нутриент 		= Справочники.Нутриенты.ПустаяСсылка();
					Количество 		= 0;
					МинКоличество 	= 0;
					МаксКоличество 	= 0;
					Делитель    	= 1;
					Точность		= 0;
					
					Если СтрокаНутриентов.ТипНутриента = Перечисления.ТипыНутриентов.Витамины Тогда
						
						Точность = 0.2;
						Если СтрокаНутриентов.Нутриент = "Витамин B1 (тиамин)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминB1;	
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин B2 (рибофлавин)" Тогда
                        	Нутриент = Справочники.Нутриенты.ВитаминB2; 	
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин B3 (пантотеновая кислота)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминB3;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин B6 (пиридоксин)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминB6;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин B9 (фолиевая кислота)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминB9;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин В12 (цианокобаламин)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминB12;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин C (аскорбиновая кислота)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминC;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин E (альфа-токоферол)" Тогда
                            Нутриент = Справочники.Нутриенты.ВитаминE;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин D (эргокальциферол)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминD;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин PP (никотиновая кислота)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминPP;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Витамин К (филлохинон)" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминK;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Биотин" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминB7;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Бета-каротин" Тогда	
							Нутриент = Справочники.Нутриенты.ВитаминA;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Альфа-каротин" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминA;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Лютеин + зеаксантин" Тогда
                            Нутриент = Справочники.Нутриенты.ВитаминA;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Бета-криптоксантин" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминA;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Холин" Тогда
							Нутриент = Справочники.Нутриенты.ВитаминB4;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Метилметионинсульфоний (витамин U)" Тогда 	
	                    	Нутриент = Справочники.Нутриенты.ВитаминU;							
						КонецЕсли; 						
						
					ИначеЕсли СтрокаНутриентов.ТипНутриента = Перечисления.ТипыНутриентов.Минералы Тогда 
						Точность = 0.2;
						Нутриент = ПолучитьНутриентПоНаименвоанию(СтрокаНутриентов.Нутриент, Перечисления.ТипыНутриентов.Минералы);
					ИначеЕсли СтрокаНутриентов.ТипНутриента = Перечисления.ТипыНутриентов.Аминокислоты Тогда
						Точность = 0.2;
						Нутриент = ПолучитьНутриентПоНаименвоанию(СтрокаНутриентов.Нутриент, Перечисления.ТипыНутриентов.Аминокислоты);
					ИначеЕсли СтрокаНутриентов.ТипНутриента = Перечисления.ТипыНутриентов.Жиры Тогда
						
						Точность = 0.2;	
						Если СтрокаНутриентов.Нутриент = "Содержание омега-3 ненасыщенных жирных кислот" Тогда
							Нутриент = Справочники.Нутриенты.Омега3;	
						ИначеЕсли СтрокаНутриентов.Нутриент = "Содержание омега-6 ненасыщенных жирных кислот" Тогда
                        	Нутриент = Справочники.Нутриенты.Омега6; 	
						ИначеЕсли СтрокаНутриентов.Нутриент = "Содержание насыщенных жирных кислот" Тогда
							Нутриент = Справочники.Нутриенты.НЖК;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Холестерин" Тогда
							
						КонецЕсли;
						
					ИначеЕсли СтрокаНутриентов.ТипНутриента = Перечисления.ТипыНутриентов.Углеводы Тогда 	
						
						Точность = 0.2;	
						Если СтрокаНутриентов.Нутриент = "Глюкоза" Тогда
							Нутриент = Справочники.Нутриенты.ПростыеУглеводы;	
						ИначеЕсли СтрокаНутриентов.Нутриент = "Фруктоза" Тогда
                        	Нутриент = Справочники.Нутриенты.ПростыеУглеводы; 	
						ИначеЕсли СтрокаНутриентов.Нутриент = "Галактоза" Тогда
                        	Нутриент = Справочники.Нутриенты.ПростыеУглеводы;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Сахароза" Тогда
                        	Нутриент = Справочники.Нутриенты.СложныеУглеводы;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Лактоза" Тогда
                        	Нутриент = Справочники.Нутриенты.СложныеУглеводы;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Крахмал" Тогда
                        	Нутриент = Справочники.Нутриенты.СложныеУглеводы;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Мальтоза" Тогда
                        	Нутриент = Справочники.Нутриенты.СложныеУглеводы;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Клетчатка" Тогда
                        	Нутриент = Справочники.Нутриенты.СложныеУглеводы;
						ИначеЕсли СтрокаНутриентов.Нутриент = "Пектин" Тогда
                        	Нутриент = Справочники.Нутриенты.СложныеУглеводы;
						КонецЕсли;
						
					КонецЕсли;  
					
					Если ЗначениеЗаполнено(Нутриент) Тогда 					
					
						МассивЧисел = ПолучитьВсеЧислаВСтрокеНаСервере(СтрокаНутриентов.Количество);
						Если МассивЧисел.Количество() = 1 Тогда
							Количество = МассивЧисел[0];
						ИначеЕсли МассивЧисел.Количество() = 2 Тогда 
							МинКоличество 	= МассивЧисел[0];	
							МаксКоличество 	= МассивЧисел[1];
						КонецЕсли;
						
						Если Найти(ВРег(СтрокаНутриентов.Количество), "МКГ") > 0 Тогда
							Делитель = 1000000;	
						ИначеЕсли Найти(ВРег(СтрокаНутриентов.Количество), "МГ") > 0 Тогда 				
							Делитель = 1000;
						КонецЕсли; 
						
						Если Количество > 0 Тогда  						
							
							Запись 					= НаборЗаписей.Добавить();
							Запись.Нутриент			= Нутриент;
							Запись.Продукт 			= Продукт;
							Запись.Количество 		= Количество / Делитель;
							Запись.МинКоличество 	= Количество * (1 - Точность) / Делитель;	
							Запись.МаксКоличество 	= Количество * (1 + Точность) / Делитель;
							
						КонецЕсли;
						
						Если МаксКоличество > 0 Тогда
							
							Запись 					= НаборЗаписей.Добавить();
							Запись.Нутриент			= Нутриент;
							Запись.Продукт 			= Продукт;   							
							Запись.МинКоличество 	= МинКоличество / Делитель;	
							Запись.МаксКоличество 	= МаксКоличество / Делитель;
							Запись.Количество		= ((МинКоличество + МаксКоличество) / 2) / Делитель; 
							
						КонецЕсли; 
						
					КонецЕсли;
				
				КонецЕсли;
				
			КонецЦикла;
			
			Если СтрокаСписка.Вода > 0 Тогда
				Запись 					= НаборЗаписей.Добавить();
				Запись.Нутриент			= Справочники.Нутриенты.Вода;
				Запись.Продукт 			= Продукт; 				
				Запись.Количество		= СтрокаСписка.Вода;
				Запись.МинКоличество 	= СтрокаСписка.Вода * (1 - 0.2);	
				Запись.МаксКоличество 	= СтрокаСписка.Вода * (1 + 0.2);
			КонецЕсли;			
			
			НаборЗаписей.Записать();
			
		КонецЕсли; 	
	КонецЦикла; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПродуктПоНаименованию(Наименование, Калорийность, Родитель, Источник)  		
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПродуктыПитания.Ссылка
		|ИЗ
		|	Справочник.ПродуктыПитания КАК ПродуктыПитания
		|ГДЕ
		|	ПродуктыПитания.Наименование = &Наименование
		|	И ПродуктыПитания.Источник = &Источник";
	
	Запрос.УстановитьПараметр("Наименование", Наименование); 
	Запрос.УстановитьПараметр("Источник", Источник);
	
	РезультатЗапроса = Запрос.Выполнить(); 	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 	
	
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Результат = ВыборкаДетальныеЗаписи.Ссылка;	
		КонецЕсли; 		
	Иначе
		НовыйПродуктПитания 				= Справочники.ПродуктыПитания.СоздатьЭлемент();
		НовыйПродуктПитания.Наименование 	= Наименование;
		НовыйПродуктПитания.Калорийность 	= Калорийность;  
		НовыйПродуктПитания.Родитель		= Родитель;
		НовыйПродуктПитания.Источник		= Источник;
		НовыйПродуктПитания.Записать();
		Результат = НовыйПродуктПитания.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
 
&НаСервере
Функция ПолучитьВсеЧислаВСтрокеНаСервере(СтрокаСЧислами)
	
	Результат = Новый Массив; 
	
	ДлинаСтроки 	= СтрДлина(СтрокаСЧислами);
	НомерТекСимвола = 1;
	
	Пока НомерТекСимвола < ДлинаСтроки Цикл 
	
		СтрокаЧисла 		= "";
		ЧислоДобавлено 		= Ложь;
		РазделительУчтен 	= Ложь;
		
		ПозЧисла = Позиция1гоЧислаВСтрокеНаСервере(СтрокаСЧислами, НомерТекСимвола);
		Если ПозЧисла > 0 Тогда  		
			
			Для Сч = ПозЧисла По ДлинаСтроки Цикл
				
				НомерТекСимвола = Сч;
				Код 			= КодСимвола(СтрокаСЧислами, Сч);
				
				Если Код >= 48 И Код <= 57 Тогда
					СтрокаЧисла = СтрокаЧисла + Символ(Код);
				ИначеЕсли (Код = 44 ИЛИ Код = 46) И НЕ РазделительУчтен Тогда 
					РазделительУчтен = Истина;
					СтрокаЧисла = СтрокаЧисла + Символ(Код);
				Иначе  				
					Прервать;
				КонецЕсли; 	
			КонецЦикла; 							
			 
			Если ЗначениеЗаполнено(СтрокаЧисла) Тогда
				Результат.Добавить(Число(СтрокаЧисла));		
			КонецЕсли;  		
						
		Иначе	
			Прервать;	
		КонецЕсли;  		
	
	КонецЦикла;
	
	Возврат Результат;
		
КонецФункции  

&НаСервере
Функция Позиция1гоЧислаВСтрокеНаСервере(пСтрока, НомерСимвола = 1, ОтНачала = Истина)
    	 
    КонечныйИндекс = СтрДлина(пСтрока);
	
	Для Ит = НомерСимвола По КонечныйИндекс Цикл 
		Если ОтНачала Тогда
			Код = КодСимвола(пСтрока, Ит);
		Иначе	
		    Код = КодСимвола(пСтрока, КонечныйИндекс - Ит + 1);
		КонецЕсли; 
		 		
		Если Код >= 48 И Код <= 57 Тогда  		
			Возврат Ит; 			
		КонецЕсли;
	КонецЦикла;
	
	Возврат 0;
		
КонецФункции
 
&НаСервере
Функция ПолучитьНутриентПоНаименвоанию(Наименование, Тип)  		
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Нутриенты.Ссылка
		|ИЗ
		|	Справочник.Нутриенты КАК Нутриенты
		|ГДЕ
		|	Нутриенты.Тип = &Тип
		|	И (Нутриенты.Наименование = &Наименование
		|			ИЛИ Нутриенты.ПолноеНаименование ПОДОБНО &ПолноеНаименование)";
	
	Запрос.УстановитьПараметр("Тип", Тип);	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("ПолноеНаименование", "%" + Наименование + "%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Результат = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат Результат;
		
КонецФункции

&НаКлиенте
Процедура ЗагрузитьВсе(Команда)
	
	Для каждого Ит Из Объект.СписокАдресов Цикл
		Страница = Ит.АдресURL;	
		ПолучитьДанныеСоСтраницы(Ит);
	КонецЦикла; 
	
	ЗагрузитьДанныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаГруппыПриИзменении(Элемент)
	
	Страница = Объект.СтраницаГруппы;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокАдресовПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.СписокАдресов.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда	
		Страница = ТекущаяСтрока.АдресURL;	
	КонецЕсли;	
	
КонецПроцедуры
 
 
  
